package com.app.service;

import java.util.List;

import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.app.customExceptions.ResourceNotFoundException;
import com.app.dto.AddressDTO;
import com.app.pojos.Address;
import com.app.pojos.User;
import com.app.repository.AddressRepository;
import com.app.repository.UserRepository;

@Service
@Transactional
public class AddressServiceImpl implements AddressService{
	
	@Autowired
	private AddressRepository addressRepo;
	
	@Autowired
	private UserRepository userRepo;
	
	@Autowired
	private ModelMapper mapper;
	
	@Override
	public List<Address> getUserAddress(Long uid) {
		
		List<Address> userAddress=addressRepo.findByUser_id(uid);
		
		return(userAddress);
	}

	@Override
	public Address addNewAddress(AddressDTO address) {
		
		User user=userRepo.findById(address.getUid())
				.orElseThrow(()-> new ResourceNotFoundException("Invalid User id"));
		
		Address userAddress = mapper.map(address, Address.class);
		
		user.addAddress(userAddress);
		addressRepo.save(userAddress);
		return userAddress;
		
	}

	@Override
	public Address updateAddress(Long id , AddressDTO address) {
		
		User user=userRepo.findById(address.getUid())
				.orElseThrow(()-> new ResourceNotFoundException("Invalid User id"));
			
		Address updateAddress=addressRepo.findById(id)
				.orElseThrow(()->new ResourceNotFoundException("Invalid Address ID"));
		//remove old address
		user.removeAddress(updateAddress);
		
		mapper.map(address, updateAddress);
		
		
		updateAddress.setId(id);
		
		//add new Address
		user.addAddress(updateAddress);
		
		
		
		return updateAddress;
	}

	@Override
	public String deleteAddress(Long id) {
		addressRepo.deleteById(id);
		return "Address Deleted";
	}

}
