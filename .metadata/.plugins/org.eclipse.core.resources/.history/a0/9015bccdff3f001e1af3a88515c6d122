package com.app.pojos;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;

@Entity
@Table(name = "user_tb")
@ToString(exclude = "password")
public class User extends BaseEntity{
	
	@Column(length = 20)
	private String firstName;
	@Column(length = 20)
	private String lastName;
	@Column(length = 20,nullable = false)
	private String email;
	@Column(length = 20,nullable = false)
	private String password;
	@Column
	private long mobile;
	
	@OneToMany(mappedBy = "user",
			cascade = CascadeType.ALL,orphanRemoval = true)
	private List<Address> addresses = new ArrayList<>();
	
	@OneToMany(mappedBy = "user",
			cascade = CascadeType.ALL , orphanRemoval = true)
	private List<Order> orders = new ArrayList<>();
	
	
	
	
	
	
	public User(String firstName, String lastName, String email, String password, long mobile, List<Address> addresses,
			List<Order> orders) {
	
		this.firstName = firstName;
		this.lastName = lastName;
		this.email = email;
		this.password = password;
		this.mobile = mobile;
		this.addresses = addresses;
		this.orders = orders;
	}
	
	public User() {
		
	}
	public String getFirstName() {
		return firstName;
	}
	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}
	public String getLastName() {
		return lastName;
	}
	public void setLastName(String lastName) {
		this.lastName = lastName;
	}
	public String getEmail() {
		return email;
	}
	public void setEmail(String email) {
		this.email = email;
	}
	public String getPassword() {
		return password;
	}
	public void setPassword(String password) {
		this.password = password;
	}
	public long getMobile() {
		return mobile;
	}
	public void setMobile(long mobile) {
		this.mobile = mobile;
	}
	public List<Address> getAddresses() {
		return addresses;
	}
	public void setAddresses(List<Address> addresses) {
		this.addresses = addresses;
	}
	public List<Order> getOrders() {
		return orders;
	}
	public void setOrders(List<Order> orders) {
		this.orders = orders;
	}
	
	

	
	
	public void addAddress(Address a) {
		addresses.add(a);
		a.setUser(this);
		
	
	}
	public void removeAddress(Address a) {
		addresses.remove(a);
		a.setUser(null);
		
	}

}
